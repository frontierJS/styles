/* Overview
  .v = Font Size relative em *
  .-v = Font Size absolute rem override *
  .vy = Line Height  *
  .vx = Letter Spacing *

  .v[l | c | r] = Text align [left | center | right]
  .v[t | b  | a]  =  Text Transform [uppercase | lowercase | capitalize]
  .v[100 .. 900]  = Font Weight

  * [Can use multipiers]
    [__, _, --, -, +, ++, *, **]
============================================================================= */


/*  Line Height
============================================================================= */
.vy {
  line-height: $d-line-height;
}
.vy__ {
  line-height: 0.5;
}
.vy_ {
  line-height: 1;
}
.vy-- {
  line-height: 1.25;
}
.vy- {
  line-height: 1.375;
}
.vy\+ {
  line-height: 1.625;
}
.vy\+\+ {
  line-height: 2;
}
.vy\* {
  line-height: 2.5;
}
.vy\*\* {
  line-height: 3;
}

/* Letter Spacing
============================================================================= */
.vx {
  letter-spacing: 0;
}
.vx__ {
  letter-spacing: -0.1rem;
}
.vx_ {
  letter-spacing: -0.0625rem;
}
.vx-- {
  letter-spacing: -0.05rem;
}
.vx- {
  letter-spacing: -0.025em;
}
.vx\+ {
  letter-spacing: 0.025em;
}
.vx\+\+ {
  letter-spacing: 0.05em;
}
.vx\* {
  line-height: 0.1em;
}
.vx\*\* {
  line-height: 0.15em;
}

.vl {
  text-align: left;
}
.vr {
  text-align: right;
}
.vc {
  text-align: center;
}

/* Font Weights
============================================================================= */
@for $i from 1 through 9 {
  .v#{$i + '00'} {
    font-weight: $i * 100;
  }
}

/* Output
============================================================================= */
//v. _v for  visual text:
// color, transform (like uppercase lowercase)
// v-primary
// v-black, or v-gray-500

// Define elements and blocks
// Elements
// p,
// h1,
// h2,
// h3,
// h4,
// h5,
// h6,
// span,
// input,
// img,
// button,
// small,
// sub,
// sup,
// li,
// a

//Blocks and/or containers?
// section,
// article,
// aside,
// div,
// header,
// footer,
// ul,
// ol,
// nav

@mixin block-children($dir, $value) {
  &._#{$dir} {
    align-items: $value !important;
  }
  & > .-#{$dir} {
    align-self: $value !important;
  }
}
.block {
  display: flex;
  flex-flow: column;
  @include block-children(r, end);
  @include block-children(l, start);
  @include block-children(c, center);
  @include block-children(s, stretch);
  &.t {
    justify-content: start !important;
  }
  &.b {
    justify-content: end !important;
  }
  &.y {
    justify-content: center !important;
  }
  &.x {
    align-items: center !important;
  }
  &.c {
    align-items: center !important;
    justify-content: center !important;
  }
  & > .-c {
    align-self: center !important;
  }
  &.s {
    justify-content: stretch !important;
  }
  & > .-s {
    align-self: stretch !important;
  }
}

@mixin el-children($dir, $value) {
  &._#{$dir} {
    text-align: $value !important;
  }
}
.el {
  @include el-children(l, left);
  @include el-children(r, right);
  @include el-children(c, center);
  &.c {
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: center;
  }
  &.x {
    display: flex;
    flex-flow: row;
    justify-content: center;
  }
  &.y {
    display: flex;
    flex-flow: row;
    align-items: center;
  }
  &.t {
    display: flex;
    flex-flow: row;
    align-items: start;
  }
  &.b {
    display: flex;
    flex-flow: row;
    align-items: end;
  }
  &.l {
    display: flex;
    flex-flow: row;
    justify-content: start;
  }
  &.r {
    display: flex;
    flex-flow: row;
    justify-content: end;
  }
  &.sb {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
  }
  &.sa {
    display: flex;
    flex-flow: row;
    justify-content: space-around;
  }
  &.se {
    display: flex;
    flex-flow: row;
    justify-content: space-evenly;
  }
}

p,
span {
  &.grid,
  &.box {
    &:before {
      content: "Don't use this tag for a grid or box";
      border: 5px solid red;
    }
  }
}

/* Visual Text
============================================================================= */
@each $mKey, $mVal in $multipliers {
  $key: v#{$mKey};
  .#{$key} {
    font-size: 1em * $mVal;
  }
  ._#{$key} > * {
    font-size: 1em * $mVal;
  }
}

/* Visual Text REM Override
============================================================================= */
@each $mKey, $mVal in $multipliers {
  $key: v#{$mKey};
  .-#{$key} {
    font-size: 1rem * $mVal;
  }
}

.vt, .uppercase {
  text-transform: uppercase;
}
.vb, .lowercase {
  text-transform: lowercase;
}
.va, .capitalize {
  text-transform: capitalize;
}
