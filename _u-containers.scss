/* Grid
============================================================================= */
@mixin grid() {
  .g {
    display: grid;
    &x {
      display: grid;
      grid-auto-flow: row;
    }
    &y {
      display: grid;
      grid-auto-flow: column;
    }
    &.s {
      place-content: stretch;
    }
    &.sb {
      place-content: space-between;
    }
    &.sa {
      place-content: space-around;
    }
    &.se {
      place-content: space-evenly;
    }
    &.c {
      place-content: center;
    }
    &.b {
      align-content: end;
    }
    &._b {
      align-items: end;
    }
    &.r {
      place-content: end;
    }
    &._r {
      place-items: end;
    }
    &.x {
      justify-content: center;
    }
    &.y {
      align-content: center;
    }
    &._c {
      place-items: center;
    }
    &._x {
      justify-items: center;
    }
    &._y {
      align-items: center;
    }
    & > * {
      &.-c {
        place-self: center;
      }
      &.-x {
        justify-self: center;
      }
      &.-y {
        align-self: center;
      }
      &.-l {
        justify-self: start;
      }
      &.-r {
        justify-self: end;
      }
      &.-b {
        align-self: end;
      }
      &.-t {
        align-self: start;
      }
    }
  }
}

/* Row
============================================================================= */
@mixin row() {
  .row {
    width: fit-content;
    width: -moz-fit-content;
    display: flex;
    justify-content: center;
    &.wrap {
      flex-wrap: wrap;
    }
    & > * {
      flex: 1 1 auto;
    }
    // not used: align-content
    &.t,
    &.b,
    &._l,
    & > .-l,
    &.r,
    & > .-r {
      &::before {
        @include warning('Not used in rows');
      }
    }

    &.y {
      align-content: center;
    }
    &._y {
      align-items: center;
    }
    & > .-y {
      align-self: center;
    }

    //c
    &.c {
      align-items: center;
      justify-content: center;
    }
    & > .-c {
      align-self: center;
      flex: 0 1 0;
    }
    &._c {
      align-items: center;
      & > * {
        flex: 0 1 0;
      }
    }

    //x
    &._x > *,
    & > .-x {
      flex: 0 1 0;
    }
    &._g > *,
    & > .-g {
      flex: 1 0 auto;
    }

    //sb,sa,se content
    /*
&.t {
  align-content: flex-start;
}
&.b {
  align-content: flex-end;
}
*/
    &.l {
      justify-content: flex-start;
    }
    &.r {
      justify-content: flex-end;
    }
    &.x {
      justify-content: center;
    }

    &._t {
      align-items: flex-start;
    }
    & > .-t {
      align-self: flex-start;
    }

    &._b {
      align-items: flex-end;
    }
    & > .-b {
      align-self: flex-end;
    }
    &._s {
      align-items: stretch;
    }
    & > .-s {
      align-self: stretch;
    }
  }
}

/* Flex
============================================================================= */
@mixin flex() {
  .f {
    display: flex;
    &x {
      display: flex;
      flex-flow: row;
      justify-content: center;
      align-items: stretch;
    }
    &xc {
      display: flex;
      flex-flow: row;
      justify-content: center;
      align-items: stretch;
    }
    &xg {
      display: flex;
      flex-flow: row;
      align-items: stretch;
      & > * {
        flex: 1;
      }
    }
    &xl {
      display: flex;
      flex-flow: row;
      justify-content: start;
      align-items: stretch;
    }
    &xr {
      display: flex;
      flex-flow: row;
      justify-content: end;
      align-items: stretch;
    }
    &xsa {
      display: flex;
      flex-flow: row;
      justify-content: space-around;
      align-items: stretch;
    }
    &xsb {
      display: flex;
      flex-flow: row;
      justify-content: space-between;
      align-items: stretch;
    }
    &xse {
      display: flex;
      flex-flow: row;
      justify-content: space-evenly;
      align-items: stretch;
    }
    &y {
      display: flex;
      flex-flow: column;
      justify-content: center;
      align-items: stretch;
    }
    &yc {
      display: flex;
      flex-flow: column;
      justify-content: center;
      align-items: stretch;
    }
    &yg {
      display: flex;
      flex-flow: column;
      align-items: stretch;
      & > * {
        flex: 1;
      }
    }
    &yt {
      display: flex;
      flex-flow: column;
      justify-content: start;
      align-items: stretch;
    }
    &yb {
      display: flex;
      flex-flow: column;
      justify-content: end;
      align-items: stretch;
    }
    &ysa {
      display: flex;
      flex-flow: column;
      justify-content: space-around;
      align-items: stretch;
    }
    &ysb {
      display: flex;
      flex-flow: column;
      justify-content: space-between;
      align-items: stretch;
    }
    &yse {
      display: flex;
      flex-flow: column;
      justify-content: space-evenly;
      align-items: stretch;
    }
  }

  .fx,
  .fxc,
  .fxl,
  .fxr,
  .fxsa,
  .fxsb,
  .fxse,
  .fxg {
    &._t {
      align-items: start;
    }
    & > .-t {
      align-self: start;
    }
    &._b {
      align-items: end;
    }
    & > .-b {
      align-self: end;
    }
    &._c {
      align-items: center;
    }
    & > .-c {
      align-self: center;
    }
    &._s {
      align-items: stretch;
    }
    & > .-s {
      align-self: stretch;
    }
  }
  .fy,
  .fyc,
  .fyt,
  .fyb,
  .fysa,
  .fysb,
  .fyse,
  .fyg {
    &._l {
      align-items: start;
    }
    & > .-l {
      align-self: start;
    }
    &._r {
      align-items: end;
    }
    & > .-r {
      align-self: end;
    }
    &._c {
      align-items: center;
    }
    & > .-c {
      align-self: center;
    }
    &._s {
      align-items: stretch;
    }
    & > .-s {
      align-self: stretch;
    }
  }
}
/* Block
============================================================================= */
@mixin block() {
  .block {
    width: fit-content;
    width: -moz-fit-content;
    display: flex;
    //justify-content: center;
    flex-flow: column;
    & > * {
      // flex: 1 1 auto;
    }
    // not used: align-content
    &.l,
    &.r,
    &.b {
      &::before {
        @include warning('Not used in blocks');
      }
    }
    //x

    &.x {
      align-content: center;
    }
    &._x {
      align-items: center;
    }
    & > .-x {
      align-self: center;
    }

    //c
    &.c {
      align-items: center;
      justify-content: center;
    }
    &._c {
      align-items: center;
      & > * {
        flex: 0 1 0;
      }
    }
    & > .-c {
      align-self: center;
      flex: 0 1 0;
    }

    //y
    &._y > *,
    & > .-y {
      flex: 0 1 0;
    }
    &._g > *,
    & > .-g {
      flex: 1 0 auto;
    }

    //sb,sa,se content
    /*
&.l {
  align-content: flex-start;
}
&.r {
  align-content: flex-end;
}
*/
    &.t {
      justify-content: flex-start;
    }
    &.b {
      justify-content: flex-end;
    }
    &.y {
      justify-content: center;
    }

    &._l {
      align-items: flex-start;
    }
    & > .-l {
      align-self: flex-start;
    }

    &._r {
      align-items: flex-end;
    }
    & > .-r {
      align-self: flex-end;
    }
    &._t > * {
      margin-bottom: auto;
      margin-top: 0;
    }
    & > .-t {
      margin-bottom: auto;
      margin-top: 0;
    }
    &._b > * {
      margin-top: auto;
      margin-bottom: 0;
    }
    & > .-b {
      margin-top: auto;
      margin-bottom: 0;
    }

    &._s {
      align-items: stretch;
    }
    & > .-s {
      align-self: stretch;
    }
  }
}

// Containers
/* Sizing
============================================================================= */
.h100 {
  height: 100%;
}
.hscreen {
  height: 100vh;
}

// Width
.w100 {
  width: 100%;
}
.w75 {
  width: 75%;
}
.w50 {
  width: 50%;
}
.w25 {
  width: 25%;
}
.wscreen {
  width: 100vw;
}

/* Output
============================================================================= */

@include grid;
@include flex;
// @include block;
// @include row;
